<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>55</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PO62GydDAAAAAElFTkSuQmCC
</value>
  </data>
</root>